@model SimpleVegan.Models.BlogPost

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Microsoft.AspNet.Identity;


<body style="background-color:#eaedf2;">

    <div class="row">
        <div class="col-md-12">
            <div class="jumbotron" style="background-color: deeppink; color: white;">
                <div style="text-align: center;">
                    <h1>@Model.Title</h1>
                    <p>
                        <i>A blog by @Model.Member.FirstName @Model.Member.LastName</i>
                    </p>
                    <p>Posted on @Model.Dop</p>
                </div>
            </div>
        </div>
    </div>


    <div style="margin: 0 5% 5% 5%; padding: 15px; background-color: white;">
        @Html.Raw(Model.Body)
    </div>

    <div class="col-md-offset-5 col-md-7" style="margin-bottom: 70px;">
        @if (string.Equals(User.Identity.GetUserId(), Model.Member.userId))
        {
            @Html.ActionLink("Edit", "Edit", new { id = Model.BlogPostID }, new { @class = "btn btn-default" })
        }

        @Html.ActionLink("Back to Blog", "Index", null, new { @class = "btn btn-default" })
    </div>

    <div class="container">
        @if (User.Identity.IsAuthenticated)
        {
            <form onsubmit="return false">
                <div class="form-group">
                    <label>Add a comment</label>
                    <textarea rows="4" cols="50" class="form-control" id="message" required></textarea>
                </div>
                <button type="submit" class="btn btn-default" id="sendmessage">Comment</button>
            </form>
        }

        <h4 style="color: deeppink; margin-top: 40px;">Comments</h4>
        @if (!User.Identity.IsAuthenticated) {
            <p class="alert alert-info">Please login to add a comment.</p>
        }
        <ul id="discussion" class="list-group">
            @{
                foreach (var item in Model.Comments)
                {
            <li class="list-group-item" style="margin-top:10px;">
                <p><strong>@item.CommenterName says</strong></p>
                <p>@item.Body</p>
                <p style="text-align: right;">
                    @if (string.Equals(User.Identity.GetUserId(), item.CommenterId))
                    {
                        //show delete link
                        <a href="/Comments/DeleteConfirmed/@item.CommentID" class="btn btn-default">Delete</a>
                    }
                </p>
                @{
                    var numDays = Math.Round((DateTime.Now - item.dop).TotalDays);
                    var numHours = Math.Round((DateTime.Now - item.dop).TotalHours);
                    var numMinutes = Math.Round((DateTime.Now - item.dop).TotalMinutes);

                }

                @if (numDays < 1)
                {
                    if (numHours < 1)
                    {
                        <p style="text-align: right">@numMinutes minute(s) ago</p>
                    }
                    else
                    {
                        <p style="text-align: right">@numHours hour(s) ago</p>
                    }
                }
                else
                {
                    <p style="text-align: right">@numDays day(s) ago</p>
                }

            </li>

                }
            }
        </ul>
    </div>


    @section Scripts {
        <!--Script references. -->
        <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>
        <!--SignalR script to update the chat page and send messages.-->
        <script>
            $(function () {
                // Reference the auto-generated proxy for the hub.
                var toDo = $.connection.toDoHub;
                // Create a function that the hub can call back to display messages.
                toDo.client.addNewMessageToPage = function (name, message) {
                    // Add the message to the page.

                    $('#discussion').append("<li class='list-group-item' style='margin-top: 10px;'><p><strong>" + htmlEncode(name)
                        + ' says</p></strong><p>' + htmlEncode(message) + "</p><p style='text-align:right;'><button class='btn btn-default' id='delete -c'>Delete</button></p><p style='text-align: right'>Just Now</p></li>");
                };
                // Start the connection.
                $.connection.hub.start().done(function () {
                    $('#sendmessage').click(function () {
                        var displayname = "@User.Identity.GetUserId()";
                        var message = $('#message').val();
                        if (displayname.length == 0 || message.length == 0)
                            return;
                        
                        //name,message
                        toDo.server.send(displayname, $('#message').val());

                        var obj = new Object();
                        obj.bid = "@Model.BlogPostID";
                        obj.message = message;
                        obj.mid = displayname;
                        console.log(JSON.stringify(obj));

                        //persist the value on the database
                        $.ajax({
                            url: '@Url.Action("Create", "Comments")',
                            type: 'POST',
                            data: JSON.stringify(obj),
                            dataType: "json",  
                            contentType: "application/json; charset=utf-8",  
                            success: function (response) {  
                                // Call the Send method on the hub.

                                if (response == "Success") {
                                    
                                }
                                else {
                                    console.log(response);
                                }
                            }  
                        });

                        // Clear text box and reset focus for next comment.
                        $('#message').val('');
                    });

                    //sonething else
                });
            });
            // This optional function html-encodes messages for display in the page.
            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }
        </script>


    }
